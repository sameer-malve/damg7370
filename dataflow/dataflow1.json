{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable8",
						"type": "DatasetReference"
					},
					"name": "sourceStg",
					"description": "Import data from ds_STAGE_SEATTLE_PET_LICENSE"
				},
				{
					"name": "BreedDimMaxId",
					"description": "Import Data from Breed Dim"
				},
				{
					"name": "sourceBreedDim",
					"description": "Import Data from ds_Demo_SCHEMA_BREED_DIM"
				}
			],
			"sinks": [
				{
					"name": "sinkBreedDim",
					"description": "Export Data to SEATTLE_SCHEMA_BREED_DIM"
				}
			],
			"transformations": [
				{
					"name": "SourceDataSK",
					"description": "Custom Cross join on 'sourceStg' and 'BreedDimMaxId'"
				},
				{
					"name": "aggregateBreedKeys",
					"description": "Aggregate data by 'SPECIES, PRIMARYBREED, SECONDARYBREED, MAXBREEDSK' producing Columns"
				},
				{
					"name": "joinToTarget",
					"description": "Left Outer Join on aggregateBreedKey and SourceBreedDim"
				},
				{
					"name": "filterExistingRows",
					"description": "Filter rows using expression on column 'SPECIES_NAME, PRIMARY_BREED_NAME,SECONDARY_BREED_NAME'"
				},
				{
					"name": "surrogateKey",
					"description": "Adding new key RowNum starting from 1 with step 1"
				},
				{
					"name": "DerivedColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_JOB_ID as string (\"59\")",
				"}",
				"source(output(",
				"          LICENSE_ISSUE_DATE as date,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     format: 'table') ~> sourceStg",
				"source(output(",
				"          MAXBREEDSK as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> BreedDimMaxId",
				"source(output(",
				"          BREED_SK as string,",
				"          PRIMARY_BREED_NAME as string,",
				"          SECONDARY_BREED_NAME as string,",
				"          SPECIES_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> sourceBreedDim",
				"sourceStg, BreedDimMaxId join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SourceDataSK",
				"SourceDataSK aggregate(groupBy(SPECIES = Species,",
				"          PRIMARY_BREED = Primary_Breed,",
				"          SECONDARY_BREED,",
				"          MAXBREEDSK),",
				"     COUNT_ROW = count(LICENSE_NUMBER)) ~> aggregateBreedKeys",
				"aggregateBreedKeys, sourceBreedDim join(PRIMARY_BREED == PRIMARY_BREED_NAME",
				"     && SECONDARY_BREED == SECONDARY_BREED_NAME",
				"     && SPECIES == SPECIES_NAME,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinToTarget",
				"joinToTarget filter(isNull(SPECIES_NAME)&&isNull(PRIMARY_BREED_NAME)&&isNull(SECONDARY_BREED_NAME)) ~> filterExistingRows",
				"filterExistingRows keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"surrogateKey derive(BREED_SK = MAXBREEDSK + RowNum,",
				"          DI_LOAD_DT = currentTimestamp(),",
				"          DI_JOB_ID = $DI_JOB_ID) ~> DerivedColumns",
				"DerivedColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          BREED_SK,",
				"          PRIMARY_BREED_NAME = PRIMARY_BREED,",
				"          SECONDARY_BREED_NAME = SECONDARY_BREED,",
				"          SPECIES_NAME = SPECIES,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DT",
				"     ),",
				"     format: 'table') ~> sinkBreedDim"
			]
		}
	}
}